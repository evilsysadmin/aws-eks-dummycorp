# Values para kube-prometheus-stack con dashboards básicos de K8s
# Configuración global
nameOverride: ""
fullnameOverride: ""

# Grafana
grafana:
  enabled: true
  
  adminPassword: "grafana2025yes"
  service:
    type: ClusterIP
    port: 80
    targetPort: 3000
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  persistence:
    enabled: false
  
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip  
      alb.ingress.kubernetes.io/healthcheck-path: "/api/health"
      alb.ingress.kubernetes.io/healthcheck-port: "3000"
      alb.ingress.kubernetes.io/success-codes: "200-307"
      alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
      alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15"      
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
      alb.ingress.kubernetes.io/backend-protocol: "HTTP"
      external-dns.alpha.kubernetes.io/hostname: grafana.dummycorp.evilsysadmin.click
      external-dns.alpha.kubernetes.io/ttl: "60"

    hosts:
      - "grafana.dummycorp.evilsysadmin.click"
    path: /
    
  sidecar:
    dashboards:
      provider:
        disableDelete: false
        allowUiUpdates: true

  defaultDashboardsEnabled: true

 
# Prometheus
prometheus:
  prometheusSpec:
    retention: 10d
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    storageSpec:
      emptyDir:
        medium: Memory
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: 'arn:aws:iam::980921756231:role/prometheus-role'

# Alertmanager
alertmanager:
  enabled: false
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  alertmanagerSpec:
    storage:
      emptyDir:
        medium: Memory

# Node-exporter
nodeExporter:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 180Mi
    requests:
      cpu: 100m
      memory: 30Mi

# Kube-state-metrics
kubeStateMetrics:
  enabled: true

# Operator 
prometheusOperator:
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  tls:
    enabled: false
  admissionWebhooks:
    enabled: false
    certManager:
      enabled: false
  

# Configuración adicional para monitorear recursos específicos
defaultRules:
  create: true
  rules:
    etcd: false
    kubeScheduler: false

# Desactivar recursos no necesarios para empezar
kubeControllerManager:
  enabled: false

kubeScheduler:
  enabled: false

kubeProxy:
  enabled: false

# Etcd
kubeEtcd:
  enabled: false